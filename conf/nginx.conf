pid /run/nginx.pid;

## Set user nginx should run under
user www-data;

## You must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes auto;
worker_cpu_affinity auto;

## Number of file descriptors used for nginx
## The limit for the maximum FDs on the server is usually set by the OS.
## If you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 65535;

## only log critical errors
error_log /var/log/nginx/error.log crit;

events
{
  ## Determines how much clients will be served per worker
  ## max clients = worker_connections * worker_processes
  ## max clients is also limited by the number of socket connections available on the system (~64k)
  worker_connections 65535;

  ## Optimized to serve many clients with each thread, essential for linux
  use epoll;

  ## Accept as many connections as possible, may flood worker connections if set too low
  multi_accept on;
}

http
{
  server_names_hash_bucket_size 64;
  server_names_hash_max_size 2048;
  server_name_in_redirect off;
  types_hash_max_size 2048;

  ## Cache informations about FDs, frequently accessed files
  ## Can boost performance, but you need to test those values
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  ## Enables multi-threading
  aio threads;
  aio_write on;

  ## To boost I/O on HDD we can disable access logs
  access_log off;
  log_not_found off;

  ## https://github.com/GetPageSpeed/ngx_security_headers
  security_headers on;
  hide_server_tokens on;

  ## Combining kTLS and sendfile() means data is encrypted directly in kernel space, before being passed to the network stack for transmission.
  sendfile on;

  ## Send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

  ## Don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  ## Allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  ## Timeouts really improve nginx performance substantially. The keepalive connections reduce cpu and network overhead required for opening and closing connections.
  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;

  ## Nuffers play a big role in the optimization of nginx performance. The following are the variables that need to be adjusted for optimum performance
  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 4 4k;

  ## MIME
  include mime.types;
  default_type application/octet-stream;

  ## Load configs
  include /etc/nginx/sites-enabled/*;
}